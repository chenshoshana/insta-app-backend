{"version":3,"sources":["cmps/AppHeader.jsx","service/utilService.js","cmps/CommentPreview.jsx","cmps/CommentList.jsx","service/storageService.js","service/httpService.js","service/postService.js","store/action/postActions.js","cmps/RemovePostConfirm.jsx","cmps/PostActionsBtns.jsx","store/action/commentActions.js","cmps/AddComment.jsx","cmps/PostPreview.jsx","pages/PostList.jsx","service/cloudinaryService.js","cmps/AddPost.jsx","service/socketService.js","cmps/ChatApp.jsx","pages/InstaApp.jsx","pages/Login.jsx","pages/Signup.jsx","service/userService.js","pages/UserDetails.jsx","App.jsx","reportWebVitals.js","store/reducer/postReducer.js","store/store.js","index.js"],"names":["AppHeader","className","to","type","name","placeholder","autoComplete","aria-label","display","fill","height","viewBox","width","d","clipRule","fillRule","Avatar","src","utilService","makeId","length","txt","possible","i","charAt","Math","floor","random","getRandomInt","min","max","dateFormatter","timeStampStart","dateFormat","Date","toString","dayName","substring","month","dayNum","time","timeDifference","current","previous","msPerMinute","msPerHour","msPerDay","msPerMonth","msPerYear","elapsed","round","CommentPreview","comment","removeComment","post","loggedinUser","List","ListItem","ListItemAvatar","byUser","imgUrl","ListItemText","primary","username","secondary","_id","onClick","IconButton","disabled","color","CardHeader","subheader","now","createdAt","CommentList","comments","map","storageService","load","key","str","localStorage","getItem","JSON","parse","save","val","stringify","setItem","Axios","create","withCredentials","axios","gPosts","require","BASE_URL","postService","query","getById","savePost","remove","a","get","then","res","data","posts","Promise","resolve","postId","find","reject","delete","put","removePost","dispatch","RemovePostConfirm","toggleRemovePost","component","button","Divider","divider","_PostActionsBtns","this","props","CardActions","disableSpacing","toggleLiked","clickedLike","likes","Component","PostActionsBtns","connect","state","postModule","addComment","push","_AddComment","onSaveComment","ev","preventDefault","savedComment","alert","setState","onInputChange","target","value","onSubmit","onChange","mapDispatchToProps","AddComment","_PostPreview","onToggleLiked","postCopy","findIndex","like","id","filter","editPost","Card","avatar","user","action","title","Button","CardMedia","image","onAddComment","newPost","catch","err","console","log","commentId","PostPreview","PostList","onRemovePost","cloudinaryService","uploadImg","file","UPLOAD_URL","formData","FormData","append","fetch","method","body","json","secure_url","_AddPost","onUploadImg","files","onSavePost","savedPost","addPost","addPostFalse","imageState","htmlFor","rows","accept","hidden","addedPost","AddPost","socketService","socket","setup","io","on","eventName","cb","off","emit","terminate","saveMsgsToStorage","msgs","MSG_STORAGE_KEY","getMsgsFromStorage","createSocketService","_Chat","msg","isBotMode","currTypingUser","isTyping","setUserTyping","addMsg","newMsg","prevState","onSendBotResponse","timeout","clearTimeout","setTimeout","sendBotResponse","sendMsg","msgHandleChange","savedMsgs","prevProps","isOpen","onClose","checked","idx","Chat","_InstaApp","isNewPost","isRemovePost","isChatOpen","onToggleRemovePost","onAddPostTrue","onAddPostFalse","onToggleChat","loadPosts","filterBy","InstaApp","Login","initialValues","email","password","validate","values","errors","test","setSubmitting","touched","handleChange","handleBlur","handleSubmit","isSubmitting","onBlur","Signup","firstName","lastName","r","UserDetails","img","GridList","cellHeight","cols","GridListTile","App","Fragment","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","editedevPosts","regex","RegExp","text","inStock","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b10cd1e.chunk.js","sourcesContent":["import { Link } from 'react-router-dom'\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\n// import { connect } from 'react-redux'\r\n\r\nexport function AppHeader() {\r\n\r\n    // nav-layout needs flex justify center\r\n    // main-layout need min-width 980px\r\n    // main-layout need max-width 1200px\r\n    return (\r\n        <section className=\"main-header flex justify-center\">\r\n            <header className=\"header-layout\">\r\n                <div className=\"header-container flex align-center space-between\">\r\n                    <div className=\"header-left flex align-center\">\r\n                        <div className=\"header-logo\">\r\n                            <Link to=\"/\">InstaApp</Link>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <input type=\"text\" name=\"text\" placeholder=\"Search\" autoComplete=\"off\" className=\"search-input\" />\r\n                    <div className=\"header-list clean-list\">\r\n                        <div className=\"nav-icons flex\" >\r\n                            <Link to=\"/\"><svg aria-label=\"Home\" className=\"_8-yf5\" display=\"none\" fill=\"#262626\" height=\"22\" viewBox=\"0 0 48 48\" width=\"22\"><path d=\"M45.3 48H30c-.8 0-1.5-.7-1.5-1.5V34.2c0-2.6-2-4.6-4.6-4.6s-4.6 2-4.6 4.6v12.3c0 .8-.7 1.5-1.5 1.5H2.5c-.8 0-1.5-.7-1.5-1.5V23c0-.4.2-.8.4-1.1L22.9.4c.6-.6 1.5-.6 2.1 0l21.5 21.5c.4.4.6 1.1.3 1.6 0 .1-.1.1-.1.2v22.8c.1.8-.6 1.5-1.4 1.5zm-13.8-3h12.3V23.4L24 3.6l-20 20V45h12.3V34.2c0-4.3 3.3-7.6 7.6-7.6s7.6 3.3 7.6 7.6V45z\"></path></svg></Link>\r\n                            <Link to=\"/\"><svg aria-label=\"Home\" className=\"_8-yf5\" fill=\"#262626\" height=\"22\" viewBox=\"0 0 48 48\" width=\"22\"><path d=\"M45.5 48H30.1c-.8 0-1.5-.7-1.5-1.5V34.2c0-2.6-2.1-4.6-4.6-4.6s-4.6 2.1-4.6 4.6v12.3c0 .8-.7 1.5-1.5 1.5H2.5c-.8 0-1.5-.7-1.5-1.5V23c0-.4.2-.8.4-1.1L22.9.4c.6-.6 1.6-.6 2.1 0l21.5 21.5c.3.3.4.7.4 1.1v23.5c.1.8-.6 1.5-1.4 1.5z\"></path></svg></Link>\r\n                            <Link to=\"/chat\"><svg aria-label=\"Messenger\" className=\"_8-yf5 \" fill=\"#262626\" height=\"22\" viewBox=\"0 0 48 48\" width=\"22\"><path d=\"M36.2 16.7L29 22.2c-.5.4-1.2.4-1.7 0l-5.4-4c-1.6-1.2-3.9-.8-5 .9l-6.8 10.7c-.7 1 .6 2.2 1.6 1.5l7.3-5.5c.5-.4 1.2-.4 1.7 0l5.4 4c1.6 1.2 3.9.8 5-.9l6.8-10.7c.6-1.1-.7-2.2-1.7-1.5zM24 1C11 1 1 10.5 1 23.3 1 30 3.7 35.8 8.2 39.8c.4.3.6.8.6 1.3l.2 4.1c0 1 .9 1.8 1.8 1.8.2 0 .5 0 .7-.2l4.6-2c.2-.1.5-.2.7-.2.2 0 .3 0 .5.1 2.1.6 4.3.9 6.7.9 13 0 23-9.5 23-22.3S37 1 24 1zm0 41.6c-2 0-4-.3-5.9-.8-.4-.1-.8-.2-1.3-.2-.7 0-1.3.1-2 .4l-3 1.3V41c0-1.3-.6-2.5-1.6-3.4C6.2 34 4 28.9 4 23.3 4 12.3 12.6 4 24 4s20 8.3 20 19.3-8.6 19.3-20 19.3z\"></path></svg></Link>\r\n                            <Link to=\"/compass\"><svg aria-label=\"Find People\" className=\"_8-yf5 \" fill=\"#262626\" height=\"22\" viewBox=\"0 0 48 48\" width=\"22\"><path clipRule=\"evenodd\" d=\"M24 0C10.8 0 0 10.8 0 24s10.8 24 24 24 24-10.8 24-24S37.2 0 24 0zm0 45C12.4 45 3 35.6 3 24S12.4 3 24 3s21 9.4 21 21-9.4 21-21 21zm10.2-33.2l-14.8 7c-.3.1-.6.4-.7.7l-7 14.8c-.3.6-.2 1.3.3 1.7.3.3.7.4 1.1.4.2 0 .4 0 .6-.1l14.8-7c.3-.1.6-.4.7-.7l7-14.8c.3-.6.2-1.3-.3-1.7-.4-.5-1.1-.6-1.7-.3zm-7.4 15l-5.5-5.5 10.5-5-5 10.5z\" fillRule=\"evenodd\"></path></svg></Link>\r\n                            <Link to=\"/favorites\"><svg aria-label=\"Activity Feed\" className=\"_8-yf5 \" fill=\"#262626\" height=\"22\" viewBox=\"0 0 48 48\" width=\"22\"><path d=\"M34.6 6.1c5.7 0 10.4 5.2 10.4 11.5 0 6.8-5.9 11-11.5 16S25 41.3 24 41.9c-1.1-.7-4.7-4-9.5-8.3-5.7-5-11.5-9.2-11.5-16C3 11.3 7.7 6.1 13.4 6.1c4.2 0 6.5 2 8.1 4.3 1.9 2.6 2.2 3.9 2.5 3.9.3 0 .6-1.3 2.5-3.9 1.6-2.3 3.9-4.3 8.1-4.3m0-3c-4.5 0-7.9 1.8-10.6 5.6-2.7-3.7-6.1-5.5-10.6-5.5C6 3.1 0 9.6 0 17.6c0 7.3 5.4 12 10.6 16.5.6.5 1.3 1.1 1.9 1.7l2.3 2c4.4 3.9 6.6 5.9 7.6 6.5.5.3 1.1.5 1.6.5.6 0 1.1-.2 1.6-.5 1-.6 2.8-2.2 7.8-6.8l2-1.8c.7-.6 1.3-1.2 2-1.7C42.7 29.6 48 25 48 17.6c0-8-6-14.5-13.4-14.5z\"></path></svg></Link>\r\n                            <Link to=\"user/userId:\" ><Avatar aria-label=\"recipe\" className={\"avatar\"} >\r\n                                <img src=\"https://www.goodesign.co.il/wp-content/uploads/2017/03/HIPSTORY-Shimoni-Lincoln.jpg\" />\r\n                            </Avatar></Link>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </header >\r\n        </section >\r\n    )\r\n}\r\n","export const utilService = {\r\n    makeId,\r\n    getRandomInt,\r\n    dateFormatter,\r\n    timeDifference\r\n};\r\n\r\nfunction makeId(length = 6) {\r\n    var txt = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return txt;\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min) + min); // Min is inclusive, Max is Exclusive\r\n}\r\nfunction dateFormatter(timeStampStart) {\r\n    const dateFormat = new Date(timeStampStart).toString()\r\n    const dayName = dateFormat.substring(0, 3)\r\n    const month = dateFormat.substring(4, 8)\r\n    const dayNum = dateFormat.substring(8, 10)\r\n    const time = dateFormat.substring(15, 21)\r\n    return (\r\n        <section>\r\n            <h3> {dayName + ', ' + month + dayNum}</h3>\r\n            <p>{time}</p>\r\n        </section>\r\n    )\r\n}\r\nfunction timeDifference(current, previous) {\r\n\r\n    var msPerMinute = 60 * 1000;\r\n    var msPerHour = msPerMinute * 60;\r\n    var msPerDay = msPerHour * 24;\r\n    var msPerMonth = msPerDay * 30;\r\n    var msPerYear = msPerDay * 365;\r\n\r\n    var elapsed = current - previous;\r\n\r\n    if (elapsed < msPerMinute) {\r\n         return Math.round(elapsed/1000) + ' seconds ago';   \r\n    }\r\n\r\n    else if (elapsed < msPerHour) {\r\n         return Math.round(elapsed/msPerMinute) + ' minutes ago';   \r\n    }\r\n\r\n    else if (elapsed < msPerDay ) {\r\n         return Math.round(elapsed/msPerHour ) + ' hours ago';   \r\n    }\r\n\r\n    else if (elapsed < msPerMonth) {\r\n        return Math.round(elapsed/msPerDay) + ' days ago';   \r\n    }\r\n\r\n    else if (elapsed < msPerYear) {\r\n        return  Math.round(elapsed/msPerMonth) + ' months ago';   \r\n    }\r\n\r\n    else {\r\n        return  Math.round(elapsed/msPerYear ) + ' years ago';   \r\n    }\r\n}","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { utilService } from '../service/utilService.js';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nexport function CommentPreview({ comment, removeComment, post, loggedinUser }) {\r\n\r\n    return (\r\n        <section>\r\n            <List className={\"root\"}>\r\n                <ListItem>\r\n                    <ListItemAvatar>\r\n                        {comment.byUser.imgUrl && <Avatar aria-label=\"recipe\" className={\"avatar\"}>\r\n                            <img src={comment.byUser.imgUrl} />\r\n                        </Avatar>}\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary={comment.byUser.username} secondary={comment.txt} />\r\n                    {loggedinUser._id === comment.byUser._id && <div className=\"delete-icon\" onClick={() => removeComment(comment._id, post._id)}>\r\n                        <IconButton aria-label=\"delete\" disabled color=\"primary\">\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    </div>}\r\n                    <CardHeader subheader={utilService.timeDifference(Date.now(), comment.createdAt)} />\r\n                </ListItem>\r\n            </List>\r\n        </section >\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { CommentPreview } from \"./CommentPreview.jsx\"\r\n\r\nexport function CommentList({ comments,removeComment,post,loggedinUser }) {\r\n    return (\r\n        <div className=\"comment-list\">\r\n            {comments.map(comment => {\r\n                return <CommentPreview key={comment._id} comment={comment} removeComment={removeComment} post={post} loggedinUser={loggedinUser} />\r\n            })}\r\n        </div>\r\n    )\r\n}","export const storageService = {\r\n    load,\r\n    save\r\n}\r\n\r\nfunction load(key) {\r\n    const str = localStorage.getItem(key)\r\n    return JSON.parse(str)\r\n}\r\n\r\nfunction save(key, val) {\r\n    const str = JSON.stringify(val)\r\n    localStorage.setItem(key, str)\r\n}","import Axios from 'axios'\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        console.log(endpoint, 'PUT', data);\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        if (err.response && err.response.status === 401) {\r\n            window.location.assign('/#/login')\r\n        }\r\n        throw err\r\n    }\r\n}","import { storageService } from './storageService.js';\r\nimport { utilService } from './utilService.js';\r\nimport Axios from 'axios';\r\nimport { httpService } from './httpService.js'\r\n\r\nconst axios = Axios.create({\r\n    withCredentials: true\r\n})\r\nconst fs = require('fs')\r\nvar gPosts = require('../data/post.json')\r\nconst BASE_URL = 'http://localhost:3030/api/posts';\r\n\r\n\r\nexport const postService = {\r\n    query,\r\n    getById,\r\n    savePost,\r\n    remove\r\n}\r\n\r\nasync function query() {\r\n    var posts = await axios.get(`${BASE_URL}`)\r\n        .then(res => res.data)\r\n    if (!posts) {\r\n        storageService.save('posts', gPosts)\r\n        return Promise.resolve(gPosts)\r\n    }\r\n    else return Promise.resolve(posts)\r\n}\r\nasync function getById(postId) {\r\n    var posts = await axios.get(`${BASE_URL}`)\r\n    const post = posts.data.find(post => post._id === postId)\r\n    if (post) return Promise.resolve(post)\r\n    else return Promise.reject('No post')\r\n}\r\n\r\nasync function remove(postId) {\r\n    const res = await axios.delete(`${BASE_URL}/${postId}`),\r\n        { data } = res\r\n    return data\r\n}\r\n\r\nasync function savePost(post) {\r\n    var res;\r\n    if (post._id) {\r\n        res = await axios.put(`${BASE_URL}/${post._id}`, {post: post})\r\n    }\r\n    else {\r\n        res = await axios.post(BASE_URL, post)\r\n    }\r\n    return res.data\r\n}\r\n\r\nfunction _savePostsToFile(gPosts) {\r\n    fs.writeFileSync('data/post.json', JSON.stringify(gPosts, null, 2))\r\n}","import { postService } from \"../../service/postService.js\"\r\n\r\n\r\nexport function loadPosts(filterBy) {\r\n    return (dispatch) => {\r\n        console.log('filterBy', filterBy);\r\n        postService.query(filterBy).then(posts => { dispatch({ type: 'SET_POSTS', posts: posts }) })\r\n        \r\n    }\r\n}\r\n\r\nexport function removePost(postId) {\r\n    return (dispatch) => {\r\n        postService.remove(postId).then(() => { dispatch({ type: 'REMOVE_POST', postId }) })\r\n    }\r\n}\r\n\r\nexport function editPost(post) {\r\n  return (dispatch) => {\r\n    postService.savePost(post)\r\n      .then((newPost) => { dispatch({ type: 'EDIT_POST', newPost })})\r\n      .catch(err => {\r\n        console.log('ERR:', err);\r\n      })\r\n  }\r\n}\r\n\r\nexport function addPost(post) {\r\n  return async dispatch => {\r\n    try {\r\n      const addedPost = await postService.savePost(post)\r\n      dispatch({ type: 'ADD_POST', post: addedPost })\r\n    } catch (err) {\r\n      console.log('PostActions: err in savePost', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","\r\nimport React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nexport function RemovePostConfirm(toggleRemovePost) {\r\n\r\n    return (\r\n        <div className=\"remove-post-modal\">\r\n            <List component=\"nav\" className={\"root\"} aria-label=\"mailbox folders\">\r\n                <ListItem button>\r\n                    <ListItemText primary=\"Remove post\" />\r\n                </ListItem>\r\n                <Divider />\r\n                <ListItem button divider>\r\n                    <ListItemText primary=\"Cancel\" />\r\n                </ListItem>\r\n            </List>\r\n        </div>\r\n    );\r\n}","import { React, Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport CardActions from '@material-ui/core/CardActions';\r\n\r\nexport class _PostActionsBtns extends Component {\r\n\r\n    render() {\r\n        const { post } = this.props\r\n        return (\r\n            <div className=\"act-btn-container\">\r\n                <CardActions disableSpacing>\r\n                    <div className=\"post-actions-btns flex space-between \">\r\n                        <div className=\"left-act-btns-container flex space-between\">\r\n                            <svg aria-label=\"Unlike\" display=\"none\" className=\"_8-yf5 \" fill=\"#ED4956\" height=\"24\"\r\n                                viewBox=\"0 0 48 48\" width=\"24\"><path d=\"M34.6 3.1c-4.5 0-7.9 1.8-10.6 5.6-2.7-3.7-6.1-5.5-10.6-5.5C6 3.1 0 9.6 0 17.6c0 7.3 5.4 12 10.6 16.5.6.5 1.3 1.1 1.9 1.7l2.3 2c4.4 3.9 6.6 5.9 7.6 6.5.5.3 1.1.5 1.6.5s1.1-.2 1.6-.5c1-.6 2.8-2.2 7.8-6.8l2-1.8c.7-.6 1.3-1.2 2-1.7C42.7 29.6 48 25 48 17.6c0-8-6-14.5-13.4-14.5z\"></path></svg>\r\n                            <svg aria-label=\"Like\" onClick={this.props.toggleLiked} className={this.props.clickedLike ? \"liked\" : ''}\r\n                                viewBox=\"0 0 48 48\" width=\"24\"><path d=\"M34.6 6.1c5.7 0 10.4 5.2 10.4 11.5 0 6.8-5.9 11-11.5 16S25 41.3 24 41.9c-1.1-.7-4.7-4-9.5-8.3-5.7-5-11.5-9.2-11.5-16C3 11.3 7.7 6.1 13.4 6.1c4.2 0 6.5 2 8.1 4.3 1.9 2.6 2.2 3.9 2.5 3.9.3 0 .6-1.3 2.5-3.9 1.6-2.3 3.9-4.3 8.1-4.3m0-3c-4.5 0-7.9 1.8-10.6 5.6-2.7-3.7-6.1-5.5-10.6-5.5C6 3.1 0 9.6 0 17.6c0 7.3 5.4 12 10.6 16.5.6.5 1.3 1.1 1.9 1.7l2.3 2c4.4 3.9 6.6 5.9 7.6 6.5.5.3 1.1.5 1.6.5.6 0 1.1-.2 1.6-.5 1-.6 2.8-2.2 7.8-6.8l2-1.8c.7-.6 1.3-1.2 2-1.7C42.7 29.6 48 25 48 17.6c0-8-6-14.5-13.4-14.5z\"></path></svg>\r\n                            <svg aria-label=\"Comment\" className=\"_8-yf5 \" viewBox=\"0 0 48 48\"\r\n                                width=\"24\"><path d=\"M47.5 46.1l-2.8-11c1.8-3.3 2.8-7.1 2.8-11.1C47.5 11 37 .5 24 .5S.5 11 .5 24 11 47.5 24 47.5c4 0 7.8-1 11.1-2.8l11 2.8c.8.2 1.6-.6 1.4-1.4zm-3-22.1c0 4-1 7-2.6 10-.2.4-.3.9-.2 1.4l2.1 8.4-8.3-2.1c-.5-.1-1-.1-1.4.2-1.8 1-5.2 2.6-10 2.6-11.4 0-20.6-9.2-20.6-20.5S12.7 3.5 24 3.5 44.5 12.7 44.5 24z\" ></path></svg>\r\n                            <svg aria-label=\"Share Post\" className=\"_8-yf5 \"\r\n                                viewBox=\"0 0 48 48\" width=\"24\"><path d=\"M47.8 3.8c-.3-.5-.8-.8-1.3-.8h-45C.9 3.1.3 3.5.1 4S0 5.2.4 5.7l15.9 15.6 5.5 22.6c.1.6.6 1 1.2 1.1h.2c.5 0 1-.3 1.3-.7l23.2-39c.4-.4.4-1 .1-1.5zM5.2 6.1h35.5L18 18.7 5.2 6.1zm18.7 33.6l-4.4-18.4L42.4 8.6 23.9 39.7z\"></path></svg>\r\n                        </div>\r\n                        <div className=\"right-act-btn\">\r\n                            <svg aria-label=\"Save\" viewBox=\"0 0 48 48\" width=\"24\"><path d=\"M43.5 48c-.4 0-.8-.2-1.1-.4L24 29 5.6 47.6c-.4.4-1.1.6-1.6.3-.6-.2-1-.8-1-1.4v-45C3 .7 3.7 0 4.5 0h39c.8 0 1.5.7 1.5 1.5v45c0 .6-.4 1.2-.9 1.4-.2.1-.4.1-.6.1zM24 26c.8 0 1.6.3 2.2.9l15.8 16V3H6v39.9l15.8-16c.6-.6 1.4-.9 2.2-.9z\"></path></svg>\r\n                        </div>\r\n                    </div>\r\n                </CardActions>\r\n                <p>{post.likes.length} likes</p>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        posts: state.postModule.posts,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    // addLike,\r\n    // removeLike\r\n}\r\n\r\nexport const PostActionsBtns = connect(mapStateToProps, mapDispatchToProps)(_PostActionsBtns)\r\n\r\n","import { postService } from \"../../service/postService.js\"\r\n\r\nexport function loadComments(filterBy) {\r\n    return (dispatch) => {\r\n        postService.query(filterBy)\r\n            .then(comments => { dispatch({ type: 'SET_COMMENTS', comments }) })\r\n    }\r\n}\r\n\r\nexport function removeComment(commentId, postId) {\r\n    return async (dispatch) => {\r\n        const post = await postService.getById(postId)\r\n        post.comments = post.comments.filter(comment => comment._id !== commentId)\r\n        await postService.savePost(post)\r\n        dispatch({ type: 'EDIT_POST',post })\r\n    }\r\n}\r\n\r\nexport function addComment(comment, postId) {\r\n    return async (dispatch) => {\r\n        const post = await postService.getById(postId)\r\n        post.comments.push(comment)\r\n        postService.savePost(post).then((post) => {\r\n            dispatch({ type: 'EDIT_POST', post })\r\n        })\r\n    }\r\n}\r\n\r\n","import { React, Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addComment } from '../store/action/commentActions.js'\r\nimport { utilService } from '../service/utilService.js'\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nclass _AddComment extends Component {\r\n\r\n    state = {\r\n        comment: {\r\n            _id: utilService.makeId(),\r\n            txt: \"\",\r\n            byUser: {\r\n                _id: \"sadad748\",\r\n                username: \"abraham_lincoln\",\r\n                imgUrl: \"https://www.goodesign.co.il/wp-content/uploads/2017/03/HIPSTORY-Shimoni-Lincoln.jpg\"\r\n            },\r\n            createdAt: Date.now()\r\n        }\r\n    }\r\n\r\n\r\n    onSaveComment = async (ev) => {\r\n        ev.preventDefault()\r\n        const savedComment = this.state.comment\r\n        if (!savedComment.txt) return alert('Can not upload empty comment')\r\n        this.props.addComment(savedComment, this.props.post._id)\r\n        this.setState({\r\n            comment: {\r\n                _id: utilService.makeId(),\r\n                txt: \"\",\r\n                byUser: {\r\n                    _id: \"sadad748\",\r\n                    username: \"abraham_lincoln\",\r\n                    imgUrl: \"https://www.goodesign.co.il/wp-content/uploads/2017/03/HIPSTORY-Shimoni-Lincoln.jpg\"\r\n                },\r\n                createdAt: Date.now()\r\n            }\r\n        })\r\n    }\r\n\r\n    onInputChange = (ev) => {\r\n        const comment = { ...this.state.comment };\r\n        comment.txt = ev.target.value;\r\n        this.setState({\r\n            comment: comment\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"comment-area\">\r\n                <form onSubmit={this.onSaveComment}>\r\n                    <Avatar aria-label=\"recipe\" className={\"avatar\"}>\r\n                        <img src={this.state.comment.byUser.imgUrl} />\r\n                    </Avatar>\r\n                    <input value={this.state.comment.txt} type=\"txt\" placeholder=\"Add a comment...\" name=\"comment\" className=\"add-comment-textarea\" onChange={this.onInputChange} />\r\n                    <button className=\"add-comment-btn\">Post</button >\r\n                </form>\r\n\r\n            </section>\r\n        )\r\n\r\n\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        comments: state.postModule.comments\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addComment\r\n}\r\n\r\nexport const AddComment = connect(mapStateToProps, mapDispatchToProps)(_AddComment)\r\n\r\n\r\n","import { React, Component } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { CommentList } from './CommentList.jsx'\r\nimport { utilService } from '../service/utilService.js'\r\nimport { removePost, editPost } from '../store/action/postActions.js'\r\nimport Button from '@material-ui/core/Button';\r\nimport { connect } from 'react-redux'\r\nimport { RemovePostConfirm } from './RemovePostConfirm.jsx';\r\nimport { PostActionsBtns } from './PostActionsBtns.jsx'\r\nimport { AddComment } from './AddComment.jsx';\r\nimport { addComment, removeComment } from '../store/action/commentActions.js'\r\n\r\nclass _PostPreview extends Component {\r\n\r\n    onToggleLiked = () => {\r\n        const { loggedinUser, post } = this.props\r\n        const postCopy = { ...post }\r\n        const idx = postCopy.likes.findIndex(like => like.byUser._id === loggedinUser._id)\r\n        if (idx === -1) postCopy.likes.push({ id: utilService.makeId(), byUser: { ...loggedinUser } })\r\n        else postCopy.likes = postCopy.likes.filter(like => like.byUser._id !== loggedinUser._id)\r\n        this.props.editPost(postCopy)\r\n    }\r\n\r\n    render() {\r\n        const { post } = this.props\r\n        return (\r\n            <section>\r\n                <Card className={\"root\"}>\r\n                    <CardHeader\r\n                        avatar={\r\n                            <Avatar aria-label=\"recipe\" className={\"avatar\"}>\r\n                                <img src={post.user.imgUrl} />\r\n                            </Avatar>\r\n                        }\r\n                        action={\r\n                            <IconButton aria-label=\"settings\" onClick={() => this.props.removePost(post._id)}>\r\n                                <MoreVertIcon />\r\n                            </IconButton>\r\n                        }\r\n                        title={post.user.username}\r\n                        subheader={post.title}\r\n                    />\r\n                    <Button color=\"primary\">follow</Button>\r\n                    <div>\r\n                        <img className=\"user-img\" src={post.imgUrl} />\r\n                    </div>\r\n                    <CardMedia\r\n                        className={\"media\"}\r\n                        image={post.title}\r\n                        title=\"Paella dish\"\r\n                    />\r\n                    {<PostActionsBtns post={post} toggleLiked={this.onToggleLiked} />}\r\n                    <CommentList comments={post.comments} removeComment={this.props.removeComment} post={post} loggedinUser={this.props.loggedinUser}/>\r\n                    <AddComment addComment={this.onAddComment} post={post} />\r\n                </Card>\r\n            </section>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        posts: state.postModule.posts,\r\n        loggedinUser: state.postModule.loggedinUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    removePost,\r\n    editPost,\r\n    removeComment,\r\n    addComment\r\n}\r\nexport const PostPreview = connect(mapStateToProps, mapDispatchToProps)(_PostPreview);\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { PostPreview } from \"../cmps/PostPreview.jsx\"\r\n\r\nexport function PostList({ posts, onRemovePost, toggleRemovePost }) {\r\n\r\n    return (\r\n        <div className=\"post-list\">\r\n            {posts.map(post => {\r\n                return <PostPreview className=\"post-preview\" key={post._id} post={post} onRemovePost={onRemovePost}\r\n                 toggleRemovePost={toggleRemovePost} />\r\n            })}\r\n        </div>\r\n    )\r\n}","export const cloudinaryService = {\r\n    uploadImg\r\n}\r\n\r\nasync function uploadImg(file) {\r\n    const CLOUD_NAME = \"suny\"\r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file)\r\n    formData.append('upload_preset', 'InstaApp');\r\n    try {\r\n        const res = await fetch(UPLOAD_URL, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n        const data = await res.json()\r\n        return data.secure_url\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}","import { React, Component } from 'react'\r\nimport { addPost } from '../store/action/postActions.js'\r\nimport { connect } from 'react-redux'\r\nimport { postService } from '../service/postService.js'\r\nimport { cloudinaryService } from '../service/cloudinaryService.js';\r\n\r\n\r\nexport class _AddPost extends Component {\r\n\r\n    state = {\r\n        post: {\r\n            title: '',\r\n            imgUrl: null,\r\n            createdAt: Date.now(),\r\n            user: {\r\n                \"_id\": \"sadad748\",\r\n                \"username\": \"abraham_lincoln\",\r\n                \"imgUrl\": \"https://www.goodesign.co.il/wp-content/uploads/2017/03/HIPSTORY-Shimoni-Lincoln.jpg\"\r\n            },\r\n            comments: [],\r\n            likes: []\r\n        }\r\n\r\n    }\r\n\r\n    onUploadImg = async (ev) => {\r\n        const imgUrl = await cloudinaryService.uploadImg(ev.target.files[0]);\r\n        console.log('imgUrl', imgUrl)\r\n        const postCopy = { ...this.state.post, imgUrl: imgUrl }\r\n        this.setState({ post: postCopy }, ()=> {\r\n            console.log('this.state.post', this.state.post)\r\n        })\r\n    }\r\n\r\n    onSavePost = async ev => {\r\n        ev.preventDefault()\r\n        const savedPost = this.state.post\r\n        if (!this.state.post.title || !this.state.post.imgUrl) return alert('All fields are required')\r\n        await this.props.addPost(savedPost)\r\n        this.setState({ savedPost: { title: '', imgUrl: '' } })\r\n        this.props.addPostFalse()\r\n    }\r\n\r\n    onInputChange = (ev) => {//on input change\r\n        console.log('ev.target.value:', ev.target.value)\r\n        const post = { ...this.state.post }\r\n        post[ev.target.name] = ev.target.value\r\n        console.log(post[ev.target.name])\r\n        this.setState({\r\n            post\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const imageState = (this.state.post.imgUrl)? <img src={this.state.post.imgUrl} /> : <label htmlFor=\"imgUploader\" className=\"add-post-modal-img-up\">🖼</label>\r\n        console.log('this.state.post.imgUrl', this.state.post.imgUrl)\r\n        console.log('imageState', imageState)\r\n        return (\r\n            <div className=\"screen\">\r\n                <div className=\"modal\">\r\n                    <form className=\"add-post-modal\">\r\n                        <div className=\"add-post-modal-close-btn-container\">\r\n                            <button className=\"add-post-modal-close-btn\" onClick={this.props.addPostFalse}>X</button>\r\n                        </div>\r\n                        <h4>New post</h4>\r\n                        <textarea rows=\"1\" placeholder=\"Write here\" name=\"title\" className=\"add-post-modal-textarea\" onChange={this.onInputChange}></textarea>\r\n                        <input type=\"file\" accept=\"image/*\" id=\"imgUploader\" name=\"imgUrl\" onChange={this.onUploadImg} hidden />\r\n                        {imageState}\r\n                        <div className=\"add-post-btn-container\">\r\n                            <button type=\"submit\" className=\"add-post-modal-btn\" onClick={this.onSavePost}>Add</button>\r\n                        </div>\r\n                        \r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        posts: state.postModule.posts,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addPost\r\n}\r\n\r\nexport const AddPost = connect(mapStateToProps, mapDispatchToProps)(_AddPost)\r\n\r\n","import io from 'socket.io-client'\r\n\r\nimport { storageService } from './storageService.js'\r\nconst baseUrl = (process.env.NODE_ENV === 'production') ? '' : 'http://localhost:3030'\r\nexport const socketService = createSocketService()\r\n\r\n// export const socketService = createDummySocketService()\r\n\r\n// window.socketService = socketService\r\nconst MSG_STORAGE_KEY = 'msgDB'\r\n\r\nfunction createSocketService() {\r\n    var socket;\r\n    const socketService = {\r\n        setup() {\r\n            socket = io(baseUrl, {\r\n                withCredentials: true,\r\n            });\r\n        },\r\n        on(eventName, cb) {\r\n            socket.on(eventName, cb)\r\n        },\r\n        off(eventName, cb) {\r\n            socket.off(eventName, cb)\r\n        },\r\n        emit(eventName, data) {\r\n            socket.emit(eventName, data)\r\n        },\r\n        terminate() {\r\n            socket = null\r\n        },\r\n        saveMsgsToStorage(msgs) {\r\n            storageService.save(MSG_STORAGE_KEY, msgs)\r\n        },\r\n        getMsgsFromStorage() {\r\n            return storageService.load(MSG_STORAGE_KEY)\r\n        }\r\n    }\r\n    return socketService\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { socketService } from '../service/socketService'\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nclass _Chat extends Component {\r\n  state = {\r\n    msg: { txt: '' },\r\n    msgs: [],\r\n    isBotMode: true,\r\n    currTypingUser: {\r\n      name: 'donald_trump',\r\n      imgUrl: 'https://besttv232-ynet-images1-prod.cdn.it.best-tv.com/PicServer5/2017/08/29/7999138/7999115010001009801066no.jpg',\r\n      isTyping: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const savedMsgs = socketService.getMsgsFromStorage() || [];\r\n    this.setState({ msgs: savedMsgs });\r\n\r\n    socketService.setup()\r\n    socketService.emit('chat topic', 'abraham_licolni')\r\n\r\n    socketService.on('chat addMsg', this.addMsg)\r\n\r\n    socketService.on('userTyping', this.setUserTyping)\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const didUserChange = 'abraham_licolni' !== 'abraham_licolni';\r\n\r\n    if (didUserChange) {\r\n      socketService.emit('chat topic', 'abraham_licolni')\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    socketService.off('chat addMsg', this.addMsg)\r\n    socketService.off('userTyping', this.setUserTyping)\r\n\r\n    socketService.terminate()\r\n    clearTimeout(this.timeout)\r\n  }\r\n\r\n\r\n  setUserTyping = ({ username, msg }) => {\r\n\r\n    this.setState({ currTypingUser: { username, isTyping: !!msg } }, () => {\r\n      console.log('currTypingUser: ', this.state.currTypingUser);\r\n    })\r\n  }\r\n\r\n\r\n  addMsg = newMsg => {\r\n    this.setState(prevState => ({ msgs: [...prevState.msgs, newMsg] }), () => {\r\n\r\n      socketService.saveMsgsToStorage(this.state.msgs)\r\n    })\r\n    if (this.state.isBotMode) this.onSendBotResponse();\r\n  }\r\n\r\n  onSendBotResponse = () => {\r\n    // Handle case: send single bot response (debounce).\r\n    this.timeout && clearTimeout(this.timeout)\r\n\r\n    this.timeout = setTimeout(this.sendBotResponse, 1500)\r\n  }\r\n\r\n  sendBotResponse = () => {\r\n    this.setState(prevState => ({\r\n      msgs: [...prevState.msgs, {\r\n        txt: 'hi there, long time no see!'\r\n      }]\r\n    }), () => {\r\n      socketService.saveMsgsToStorage(this.state.msgs)\r\n    })\r\n  }\r\n\r\n  sendMsg = ev => {\r\n    ev.preventDefault()\r\n\r\n    socketService.emit('chat newMsg', { txt: this.state.msg.txt })\r\n    this.setState({ msg: { txt: '' } })\r\n  }\r\n\r\n  msgHandleChange = async ev => {\r\n    const { name, value } = ev.target\r\n    const user = {\r\n      username: 'abraham_lincoln',\r\n      msg: value\r\n    }\r\n\r\n    //   username: this.props.loggedinUser?.fullname || this.props.loggedinUser?.username || 'guest',\r\n    //   msg: value\r\n\r\n    socketService.emit('typing', user)\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        msg: {\r\n          ...prevState.msg,\r\n          [name]: value\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { currTypingUser, msg } = this.state\r\n    const { isOpen } = this.props\r\n    return (\r\n      <section className=\"chat-cmp\">\r\n        <div className={`chat ${isOpen && 'active'}`}>\r\n          <h2 className=\"chat-topic chat-layout flex space-between\">Massenger<i className=\"fas fa-times\" onClick={this.props.onClose}></i></h2>\r\n          <label>\r\n            <Avatar aria-label=\"recipe\" className={\"avatar\"}>\r\n              <img src={currTypingUser.imgUrl} />\r\n            </Avatar>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"isBotMode\"\r\n              checked={this.state.isBotMode}\r\n              onChange={(ev) => this.setState({ isBotMode: ev.target.checked })}\r\n              className=\"chat-layout\"\r\n            />\r\n\r\n          </label>\r\n          <h3>{currTypingUser?.isTyping && currTypingUser.username + ' is typing...'}</h3>\r\n\r\n          <div className=\"chat-main-content\">\r\n            <ul className=\"chat-msgs chat-layout\">\r\n              {this.state.msgs.map((msg, idx) => (\r\n                <li key={idx}>\r\n                  <Avatar aria-label=\"recipe\" className={\"avatar\"}>\r\n                   <img src={currTypingUser.imgUrl} />\r\n                   </Avatar>\r\n                    {msg.txt}\r\n                    </li>\r\n              ))}\r\n            </ul>\r\n            <form className=\"msg-form\" onSubmit={this.sendMsg}>\r\n              <input\r\n                type=\"text\"\r\n                value={msg.txt}\r\n                onChange={this.msgHandleChange}\r\n                name=\"txt\"\r\n                className=\"msg-input\"\r\n                autoComplete=\"off\" />\r\n              <button>Send</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loggedinUser: 'state.user.loggedinUser'\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const Chat = connect(mapStateToProps, mapDispatchToProps)(_Chat)\r\n","import { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { PostList } from './PostList.jsx'\r\nimport { loadPosts, removePost } from '../store/action/postActions.js'\r\nimport { AddPost } from '../cmps/AddPost.jsx'\r\nimport { RemovePostConfirm } from '../cmps/RemovePostConfirm.jsx'\r\nimport { Chat } from '../cmps/ChatApp.jsx'\r\n\r\n\r\nclass _InstaApp extends Component {\r\n\r\n    state = {\r\n        isNewPost: false,\r\n        isRemovePost: false,\r\n        isChatOpen: false,\r\n    }\r\n\r\n    onToggleRemovePost = () => {\r\n        console.log('toggleRemovePost');\r\n        if (this.state.isRemovePost) this.setState({ isRemovePost: false })\r\n        else this.setState({ isRemovePost: true })\r\n    }\r\n\r\n    onAddPostTrue = () => {\r\n        // console.log('is post true- before', this.state);\r\n        if (!this.state.isNewPost) this.setState({ isNewPost: true })\r\n    }\r\n\r\n    onAddPostFalse = () => {\r\n        // console.log('is post false- before', this.state);\r\n        if (this.state.isNewPost) this.setState({ isNewPost: false })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadPosts(this.props.filterBy)\r\n\r\n    }\r\n    onToggleChat = () => {\r\n        this.setState({ isChatOpen: !this.state.isChatOpen })\r\n    }\r\n    render() {\r\n        const { posts } = this.props\r\n        return (\r\n            <section className=\"app-body\">\r\n                {this.state.isRemovePost && <RemovePostConfirm toggleRemovePost={this.onToggleRemovePost} />}\r\n                <PostList posts={posts} toggleRemovePost={this.onToggleRemovePost} />\r\n                <div>\r\n                    <button className=\"add-post-btn\" onClick={this.onAddPostTrue}>➕</button>\r\n                </div>\r\n                {this.state.isNewPost && <AddPost addPostFalse={this.onAddPostFalse} />}\r\n                {/* <div className=\"chat-icon\" onClick={this.props.onToggleChat}><i className=\"fas fa-comment-dots\"></i></div> */}\r\n                <Chat isOpen={this.props.isChatOpen} onClose={this.props.onToggleChat} />\r\n                <footer className=\"main-footer flex justify-center \">\r\n                    <small>InstaApp - All Rights Reserved © 2021</small>\r\n                </footer>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        posts: state.postModule.posts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadPosts,\r\n    removePost\r\n}\r\n\r\nexport const InstaApp = connect(mapStateToProps, mapDispatchToProps)(_InstaApp);\r\n","import React from 'react';\r\n// import { Formik } from 'formik';\r\n\r\nconst Login = () => (\r\n    <div className=\"login-page\">\r\n        <h1>Welcome back!</h1>\r\n        <form\r\n            initialValues={{ email: '', password: '' }}\r\n            validate={values => {\r\n                const errors = {};\r\n                if (!values.email) {\r\n                    errors.email = 'Required';\r\n                } else if (\r\n                    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n                ) {\r\n                    errors.email = 'Invalid email address';\r\n                }\r\n                return errors;\r\n            }}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n                setTimeout(() => {\r\n                    alert(JSON.stringify(values, null, 2));\r\n                    setSubmitting(false);\r\n                }, 400);\r\n            }}\r\n        >\r\n            {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                isSubmitting,\r\n                /* and other goodies */\r\n            }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.email}\r\n                    />\r\n                    {errors.email && touched.email && errors.email}\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.password}\r\n                    />\r\n                    {errors.password && touched.password && errors.password}\r\n                    <button type=\"submit\" disabled={isSubmitting}>\r\n                        Submit\r\n           </button>\r\n                </form>\r\n            )}\r\n        </form>\r\n    </div>\r\n);\r\n\r\nexport default Login","import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\n// import { Formik, Field, Form } from 'formik';\r\n\r\nexport const Signup = () => (\r\n    <div className=\"signup-page\">\r\n        <h1>Sign Up</h1>\r\n        <form\r\n            initialValues={{\r\n                firstName: '',\r\n                lastName: '',\r\n                email: '',\r\n            }}\r\n            onSubmit={async (values) => {\r\n                await new Promise((r) => setTimeout(r, 500));\r\n                alert(JSON.stringify(values, null, 2));\r\n            }}\r\n        >\r\n            <form>\r\n                <label htmlFor=\"firstName\">First Name</label>\r\n                {/* <Field id=\"firstName\" name=\"firstName\" placeholder=\"Jane\" /> */}\r\n\r\n                <label htmlFor=\"lastName\">Last Name</label>\r\n                {/* <Field id=\"lastName\" name=\"lastName\" placeholder=\"Doe\" /> */}\r\n\r\n                <label htmlFor=\"email\">Email</label>\r\n                {/* <Field\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"jane@acme.com\"\r\n                    type=\"email\"\r\n                /> */}\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n        </form>\r\n    </div>\r\n);\r\n","import axios from \"axios\";\r\nimport { storageService } from './storageService.js'\r\n// import Axios from 'axios';\r\n// const axios = Axios.create({\r\n//     withCredentials: true\r\n// })\r\n\r\nconst BASE_URL = 'http://localhost:3030/api/posts';\r\n// const baseUrl = (process.env.NODE_ENV === 'production')\r\n//  ? '/api'\r\n//  : 'http://localhost:3030/api';\r\nconst STORAGE_KEY = 'loggedinUser'\r\n\r\nasync function query(filterBy = {}) {\r\n    const res = await axios.get(`${BASE_URL}/user`)\r\n    return res.data\r\n}\r\n\r\nasync function login(userCreds) {\r\n    const res = await axios.post(`${BASE_URL}/auth/login`, userCreds)\r\n    const user = res.data\r\n    return _handleLogin(user)\r\n}\r\nasync function update(user) {\r\n    const res = await axios.put(`${BASE_URL}/user`, user)\r\n    return res.data\r\n}\r\n\r\nasync function remove(userId) {\r\n    const res = axios.delete(`${BASE_URL}/user/${userId}`)\r\n    return res.data\r\n}\r\n\r\nasync function logout() {\r\n    const res = await axios.post(`${BASE_URL}/auth/logout`)\r\n\r\n    storageService.clear()\r\n    return res.data\r\n}\r\n\r\nasync function signup(credentials) {\r\n    const res = await axios.post(`${BASE_URL}/auth/signup`, credentials)\r\n    const user = res.data\r\n    console.log('Signup success');\r\n    return _handleLogin(user);\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n    return storageService.load(STORAGE_KEY)\r\n}\r\n\r\n\r\n\r\nasync function getUser(userId) {\r\n    const res = await axios.get(`${BASE_URL}/user/${userId}`)\r\n    return res.data\r\n}\r\n\r\nfunction _handleLogin(user) {\r\n    storageService.store(STORAGE_KEY, user)\r\n    return user\r\n}\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getLoggedinUser,\r\n    getUser,\r\n    update,\r\n    remove,\r\n    query\r\n}","import React from 'react';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\n// import tileData from './tileData';\r\nimport { connect } from 'react-redux'\r\nimport { userService } from \"../service/userService.js\";\r\nimport { utilService } from \"../service/utilService.js\";\r\nimport { Component, Fragment } from 'react'\r\nimport { postService } from \"../service/postService.js\"\r\n\r\nexport const UserDetails = () => {\r\n    const img = 'https://64.media.tumblr.com/01d5b773173c39a69236138458ca2482/tumblr_p7eck8xuUC1ss7ju0o1_1280.jpg'\r\n    // state = {\r\n    //     logedInUser: null,\r\n    //     posts: null\r\n    // }\r\n\r\n    // componentDidMount = async () => {\r\n    //     const { loggedinUser } = this.props\r\n    //     const posts = await postService.query({ byUserId: loggedinUser._id })\r\n    //     console.log('posts: ', posts);\r\n    //     this.setState({ posts: posts })\r\n    // }\r\n    // const { posts } = this.state\r\n    // const { loggedinUser } = this.props\r\n    // const { username } = loggedinUser\r\n\r\n    // if (!posts) return <h1>Loading...</h1>\r\n    // const userId= 'a'\r\n    // const posts = postService.query()\r\n    // const userPosts = posts.find(post => post.byUser._id === userId)\r\n    // console.log('user d-posts',userPosts);\r\n\r\n\r\n    return (\r\n        <section className=\"app-body\">\r\n            <div className=\"root\">\r\n                <GridList cellHeight={160} className=\"gridList\" cols={3}> (\r\n                    <GridListTile cols={1}>\r\n                        <img src={img} />\r\n                    </GridListTile>\r\n                    <GridListTile cols={2}>\r\n                        <img src={img} />\r\n                    </GridListTile>\r\n                    <GridListTile cols={2}>\r\n                        <img src={img} />\r\n                    </GridListTile>\r\n                    <GridListTile cols={1}>\r\n                        <img src={img} />\r\n                    </GridListTile>\r\n                    <GridListTile cols={1}>\r\n                        <img src={img} />\r\n                    </GridListTile>\r\n                    <GridListTile cols={1}>\r\n                        <img src={img} />\r\n                    </GridListTile>\r\n                    <GridListTile cols={1}>\r\n                        <img src={img} />\r\n                    </GridListTile>\r\n                    <GridListTile cols={2}>\r\n                        <img src={img} />\r\n                    </GridListTile>\r\n                    <GridListTile cols={1}>\r\n                        <img src={img} />\r\n                    </GridListTile>\r\n                    <GridListTile cols={3}>\r\n                        <img src={img} />\r\n                    </GridListTile>\r\n                ))\r\n            </GridList>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport { AppHeader } from './cmps/AppHeader.jsx'\r\nimport { InstaApp } from './pages/InstaApp.jsx'\r\n// import { About } from './pages/About.jsx'\r\nimport Login from './pages/Login.jsx'\r\nimport { Signup } from './pages/Signup.jsx'\r\nimport { UserDetails } from './pages/UserDetails.jsx'\r\n// import { CommentEdit } from './cmps/CommentEdit.jsx'\r\n// import { PostsList } from './pages/PostsList.jsx'\r\n// import { PostDetails } from './pages/PostDetails.jsx'\r\n// import { PostEdit } from './pages/PostEdit.jsx'\r\nimport './assets/styles/scss/main.scss'\r\n// import { ChatApp } from './pages/ChatAppPage.jsx'\r\n\r\n\r\n\r\nexport class App extends Component {\r\n    render() {\r\n        return (<React.Fragment>\r\n            <div className=\"app\">\r\n                <AppHeader />\r\n                <Switch>\r\n                    {/* <Route component={CommentEdit} path=\"/comment/edit\" /> */}\r\n                    {/* <Route component={PostEdit} path=\"/edit/:postId?\" / */}\r\n                    {/* <Route component={PostDetails} path=\"/post/:postId\" />  */}\r\n                    {/* <Route component={ChatApp} path=\"/chat\" /> */}\r\n                    {/* <Route component={Admin} path=\"/admin/userId:\" /> */}\r\n                    <Route component={UserDetails} path=\"/user/userId:\" />\r\n                    {/* <Route component={About} path=\"/about\" /> */}\r\n                    <Route component={Signup} path=\"/signup\" />\r\n                    <Route component={Login} path=\"/login\" />\r\n                    <Route component={InstaApp} path=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </React.Fragment>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","\r\nlet localLoggedinUser = {\r\n    \"_id\": \"sadad748\",\r\n    \"username\": \"abraham_lincoln\",\r\n    \"imgUrl\": \"https://www.goodesign.co.il/wp-content/uploads/2017/03/HIPSTORY-Shimoni-Lincoln.jpg\"\r\n}\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    filterBy: { name: '', type: '' },\r\n    loggedinUser: localLoggedinUser\r\n}\r\nexport function postReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_POSTS':\r\n\r\n            return { ...state, posts: action.posts }\r\n        case 'EDIT_POST':\r\n            const editedevPosts = state.posts.map(post => {\r\n                if (action.post._id === post._id) return action.post\r\n                else return post\r\n            })\r\n            state = { ...state, posts: editedevPosts }\r\n            return state;\r\n\r\n\r\n        case 'ADD_POST':\r\n\r\n            state = { ...state, posts: [...state.posts, action.post] }\r\n            return state\r\n        case 'FILTER':\r\n            const regex = new RegExp(action.filterBy.text, 'i')\r\n            if (action.filterBy.type === \"All\" && action.filterBy.text === \"\") {\r\n                state = { ...state, filterBy: action.filterBy }\r\n                return state\r\n            }\r\n            else {\r\n                state = {\r\n                    ...state, posts: state.posts.filter(post => ((regex.test(post.name)\r\n                        && post.inStock === action.filterBy.type\r\n                        && post.type === action.filterBy.type\r\n\r\n                    ))), filterBy: action.filterBy\r\n                }\r\n                return state\r\n            }\r\n        case 'REMOVE_POST':\r\n            state = { ...state, posts: state.posts.filter(post => post._id !== action.postId) }\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import thunk from 'redux-thunk';\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux'\r\n\r\n\r\nimport { postReducer } from './reducer/postReducer.js';\r\n\r\nconst rootReducer = combineReducers({\r\n    postModule: postReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {App} from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store'\r\n\r\n\r\n\r\nReactDOM.render(\r\n\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}